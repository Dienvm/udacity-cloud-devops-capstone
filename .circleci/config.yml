version: 2.1
orbs:
  aws: circleci/aws-cli@3.1.5
  python: circleci/python@2.1.1

executors:
  node:
    docker:
      - image: cimg/node:18.0.0

commands:
  install_dependencies:
    description: install dependencies and setup aws cli
    steps:
      - run:
          name: install dependencies
          command: |
            sudo apt upgrade
            sudo apt update
            sudo apt install awscli -y
      - run:
          name: config awscli
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
            aws configure set region $AWS_DEFAULT_REGION
  setup_aws:
    description: setup aws
    steps:
      - aws/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
  setup-kubectl:
    description: Install kubectl
    steps:
      - run:
          name: Install kubectl
          command: |
            sudo apt update
            curl -O https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.17/2023-05-11/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH
            kubectl version --short --client
  setup-eksctl:
    steps:
      - run:
          name: install eksctl
          command: |
            ARCH=amd64
            PLATFORM=$(uname -s)_$ARCH

            curl -sLO "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$PLATFORM.tar.gz"
            tar -xzf eksctl_$PLATFORM.tar.gz -C /tmp && rm eksctl_$PLATFORM.tar.gz
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version
  revert-deploy:
    description: Revert deploy
    steps:
      - run:
          name: revert
          command: |
            kubectl rollout undo deployment uda-capstone
            kubectl describe deployment uda-capstone
            kubectl get all
          when: on_fail

jobs:
  build-app:
    docker:
      - image: cimg/node:18.0.0
    steps:
      - checkout
      - run:
          name: Build App
          command: |
            cd app
            yarn install
            yarn build

  test-app:
    docker:
      - image: cimg/node:18.0.0
    steps:
      - checkout
      - run:
          name: Test App
          command: |
            cd app
            yarn install
            yarn test
    depends_on:
      - build-app

  scan-app:
    docker:
      - image: cimg/node:18.0.0
    steps:
      - checkout
      - run:
          name: Scan App
          command: |
            cd app
            yarn install
            yarn audit --audit-level=critical
    depends_on:
      - build-app

  lint-app:
    docker:
      - image: cimg/node:18.0.0
    steps:
      - checkout
      - run:
          name: Lint App
          command: |
            cd app
            yarn install
            yarn lint
    depends_on:
      - build-app

  build-fe-docker-img:
    docker:
      - image: cimg/node:18.0.0
    steps:
      - checkout
      - run:
          name: login docker
          command: docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
      - run:
          name: Build Frontend Docker Image
          command: |
            IMAGE_TAG=${CIRCLE_SHA1:0:7}
            DOCKER_REPO=dienvm1/devops-capstone
            docker build -t $DOCKER_REPO:$IMAGE_TAG .
            docker push $DOCKER_REPO:$IMAGE_TAG

  deploy-app:
    docker:
      - image: cimg/node:18.0.0
    steps:
      - checkout
      - install_dependencies
      - setup_aws
      - setup-kubectl
      - setup-eksctl
      - run:
          name: Create an EKS Cluster
          command: |
            aws eks update-kubeconfig --region us-east-1 --name devops-capstone-cluster
            kubectl config get-contexts
            kubectl get all
            kubectl describe deployment devops-capstone

      - run:
          name: Deploy App
          command: |
            kubectl set image deployment/devops-capstone uda-app=dienvm1/devops-capstone:${CIRCLE_SHA1:0:7}
            kubectl rollout status deployment devops-capstone
            kubectl describe deployment devops-capstone
            kubectl get all
      - revert-deploy

workflows:
  version: 2
  default:
    jobs:
      - build-app
      - test-app:
          requires: [build-app]
      - scan-app:
          requires: [build-app]
      - lint-app:
          requires: [build-app]
      - build-fe-docker-img:
          requires: [test-app, scan-app, lint-app]
      - deploy-app:
          requires: [build-fe-docker-img]
